{"remainingRequest":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\src\\components\\ContextualTab.vue?vue&type=template&id=6eb56084&scoped=true&","dependencies":[{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\src\\components\\ContextualTab.vue","mtime":1553777242198},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553758599887},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1553758611897},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1553758612110},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553758599887},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\index.js","mtime":1553758611895}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"main\" } },\n    [\n      _c(\"v-combobox\", {\n        attrs: {\n          items: _vm.items,\n          label: \"List of Categories\",\n          chips: \"\",\n          clearable: \"\",\n          \"prepend-icon\": \"add\",\n          solo: \"\",\n          multiple: \"\"\n        },\n        on: {\n          input: function($event) {\n            _vm.insertLabel()\n          }\n        },\n        scopedSlots: _vm._u([\n          {\n            key: \"selection\",\n            fn: function(data) {\n              return [\n                _c(\n                  \"v-chip\",\n                  {\n                    attrs: { selected: data.selected, close: \"\" },\n                    on: {\n                      input: function($event) {\n                        _vm.remove(data.item),\n                          _vm.alertMe(data.item),\n                          _vm.updateComponent()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"v-avatar\", {\n                      staticClass: \"grey darken-3 white--text\",\n                      domProps: { textContent: _vm._s(data.index + 1) }\n                    }),\n                    _c(\"strong\", [_vm._v(_vm._s(data.item))]),\n                    _vm._v(\"Â \\n        \")\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ]),\n        model: {\n          value: _vm.chips,\n          callback: function($$v) {\n            _vm.chips = $$v\n          },\n          expression: \"chips\"\n        }\n      }),\n      _vm.show\n        ? _c(\"section\", {\n            staticClass: \"dataspace\",\n            staticStyle: { \"font-size\": \"2.5em\" },\n            domProps: { innerHTML: _vm._s(_vm.actualContent[_vm.index]) },\n            on: {\n              click: function($event) {\n                _vm.getIndex(_vm.actualContent[_vm.index], $event)\n              }\n            }\n          })\n        : _vm._e(),\n      _c(\n        \"div\",\n        { staticStyle: { display: \"none\" }, attrs: { id: \"highlight_menu\" } },\n        [\n          _c(\n            \"ul\",\n            { staticClass: \"side-by-side\" },\n            _vm._l(_vm.chips, function(data, index) {\n              return _c(\n                \"li\",\n                {\n                  key: data,\n                  on: {\n                    click: function($event) {\n                      _vm.getString(data)\n                    }\n                  }\n                },\n                [\n                  _c(\n                    \"a\",\n                    {\n                      staticStyle: {\n                        \"text-decoration\": \"none !important\",\n                        color: \"white\"\n                      },\n                      attrs: { href: \"#\", title: data }\n                    },\n                    [\n                      _c(\"span\", { attrs: { id: \"index_num\" } }, [\n                        _vm._v(_vm._s(index + 1))\n                      ])\n                    ]\n                  )\n                ]\n              )\n            }),\n            0\n          ),\n          _c(\"div\", { staticClass: \"caret\" })\n        ]\n      ),\n      _c(\n        \"v-btn\",\n        {\n          staticClass: \"success\",\n          attrs: { id: \"btn\" },\n          on: {\n            click: function($event) {\n              _vm.submitData(), _vm.updateComponent()\n            }\n          }\n        },\n        [_vm._v(\"Next\")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}