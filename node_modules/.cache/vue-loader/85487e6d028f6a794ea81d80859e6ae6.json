{"remainingRequest":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\src\\components\\CategoricalTab.vue?vue&type=style&index=0&id=195489f6&scoped=true&lang=css&","dependencies":[{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\src\\components\\CategoricalTab.vue","mtime":1553858372899},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\css-loader\\index.js","mtime":1553758601671},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1553758611896},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\postcss-loader\\src\\index.js","mtime":1553758606505},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1553758612110},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1553758599887},{"path":"C:\\kalibrr\\experimental\\labeler\\vuetify-tabs\\node_modules\\vue-loader\\lib\\index.js","mtime":1553758611895}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n#main {\r\n  height: 100vh;\r\n}\r\n#radioGroup {\r\n  padding: 0 20px;\r\n}\r\n.checkboxes {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.checkboxes > * {\r\n  margin-right: 15px !important;\r\n  flex-grow: 0 !important;\r\n}\r\n\r\n#btn {\r\n  margin: 20px auto;\r\n  display: block;\r\n}\r\n",{"version":3,"sources":["CategoricalTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CategoricalTab.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div id=\"main\">\r\n    <v-expansion-panel>\r\n      <v-expansion-panel-content v-for=\"(item,i) in 1\" :key=\"i\">\r\n        <div slot=\"header\">\r\n          <h2>\r\n            <v-icon>build</v-icon>&nbsp; Settings\r\n          </h2>\r\n          <h3 style=\"margin-left: 35px; margin-top: 5px\">Mode: {{radios || 'null'}}</h3>\r\n        </div>\r\n        <v-divider></v-divider>\r\n        <v-card>\r\n          <v-card-text>\r\n            <v-radio-group v-model=\"radios\" :mandatory=\"false\" id=\"radioGroup\">\r\n              <v-radio label=\"Multi-class\" value=\"Multi-class\"></v-radio>\r\n              <v-radio label=\"Multi-label\" value=\"Multi-label\"></v-radio>\r\n            </v-radio-group>\r\n\r\n            <v-combobox\r\n              v-model=\"chips\"\r\n              :items=\"items\"\r\n              label=\"List of Categories\"\r\n              chips\r\n              clearable\r\n              prepend-icon=\"add\"\r\n              solo\r\n              multiple\r\n              @input=\"insertLabel()\"\r\n            >\r\n              <template slot=\"selection\" slot-scope=\"data\">\r\n                <v-chip\r\n                  :selected=\"data.selected\"\r\n                  close\r\n                  @input=\"remove(data.item), alertMe(data.item)\"\r\n                >\r\n                  <strong>{{ data.item }}</strong>&nbsp;\r\n                  <!-- <span>(interest)</span> -->\r\n                </v-chip>\r\n              </template>\r\n            </v-combobox>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-expansion-panel-content>\r\n    </v-expansion-panel>\r\n\r\n    <v-container fluid>\r\n      <h2>\r\n        <v-icon>scatter_plot</v-icon>&nbsp; Categories\r\n      </h2>\r\n      <v-radio-group\r\n        v-if=\"radios === 'Multi-class'\"\r\n        row\r\n        v-model=\"selectedRadioCategory\"\r\n        :mandatory=\"false\"\r\n      >\r\n        <template v-for=\"(category,index) in chips\">\r\n          <v-radio :value=\"category\" :label=\"category\" :key=\"index\"></v-radio>\r\n        </template>\r\n      </v-radio-group>\r\n      <div v-else-if=\"radios === 'Multi-label'\" class=\"checkboxes\">\r\n        <template v-for=\"(category,index) in chips\">\r\n          <v-checkbox :value=\"category\" :label=\"category\" :key=\"index\" v-model=\"checkboxItems\"></v-checkbox>\r\n        </template>\r\n        <!-- <v-checkbox class=\"checkboxitem\" v-model=\"selected\" label=\"John\" value=\"John\"></v-checkbox>\r\n        <v-checkbox class=\"checkboxitem\" v-model=\"selected\" label=\"Jacob\" value=\"Jacob\"></v-checkbox>-->\r\n      </div>\r\n    </v-container>\r\n\r\n    <v-divider></v-divider>\r\n    <!-- <p>{{selectedRadioCategory}}</p>\r\n    <p>{{checkboxItems}}</p>-->\r\n    <section style=\"font-size: 2.5em;\">{{actualContent[index]}}</section>\r\n\r\n    <!-- <template v-for=\"(content,index) in contents\">\r\n      <section :key=\"index\">{{content}}</section>\r\n    </template>-->\r\n    <v-btn id=\"btn\" class=\"success\" @click=\"submitData()\">Submit</v-btn>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport md5 from \"md5\";\r\nimport { backendHost } from \"@/assets/js/backend.js\";\r\nexport default {\r\n  props: {\r\n    contents: Array,\r\n    file: String\r\n  },\r\n  mounted() {\r\n    //alert(\"hi\");\r\n    fetch(backendHost + \"/label\")\r\n      .then(response => response.json())\r\n      //.then(data => console.log(JSON.stringify(data)))\r\n      .then(data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          if (data[i].type == \"categorical\") {\r\n            this.chips.push(data[i].label);\r\n          }\r\n        }\r\n        this.initialLength = this.chips.length;\r\n      });\r\n  },\r\n  // updated() {\r\n  //   this.$watch(\"chips\", () => {\r\n  //     if (!(this.chips.length < this.initialLength)) {\r\n  //       this.lastItem = this.chips[this.chips.length - 1];\r\n  //     }\r\n  //   });\r\n  // },\r\n  data() {\r\n    return {\r\n      radios: \"Multi-class\",\r\n      lastItem: \"\",\r\n      initialLength: 0,\r\n      temp: null,\r\n      index: 0,\r\n      counter: 0,\r\n      actualContent: [],\r\n      selectedRadioCategory: \"\",\r\n      checkboxItems: [],\r\n      chips: [],\r\n      items: [\"Streaming\", \"Eating\"],\r\n      selected: [\"John\"],\r\n      myVarId: \"\"\r\n    };\r\n  },\r\n  watch: {\r\n    contents: {\r\n      immediate: true,\r\n      handler: function() {\r\n        this.index = 0;\r\n        this.actualContent = [];\r\n        this.parser(this.contents, \"$\");\r\n      }\r\n    },\r\n    actualContent: function() {\r\n      for (let i = 0; i < this.actualContent.length; i++) {\r\n        axios.post(backendHost + \"/content\", {\r\n          _id: md5(this.actualContent[i]),\r\n          content: this.actualContent[i],\r\n          file_id: this.file\r\n        });\r\n      }\r\n    },\r\n    chips: function() {\r\n      //alert(this.chips.pop());\r\n      // axios.post('http://localhost:8081/label', {\r\n      // })\r\n    }\r\n    // lastItem: function() {\r\n    //   axios.post(\"http://localhost:8081/label\", {\r\n    //     label: this.lastItem,\r\n    //     type: \"categorical\",\r\n    //     file_id: \"002\"\r\n    //   });\r\n    // }\r\n  },\r\n  methods: {\r\n    remove(item) {\r\n      this.chips.splice(this.chips.indexOf(item), 1);\r\n      this.chips = [...this.chips];\r\n    },\r\n    alertMe(item) {\r\n      //alert(\"hi\" + item + this.counter);\r\n      fetch(backendHost + \"/label\")\r\n        .then(response => response.json())\r\n        //.then(data => console.log(JSON.stringify(data)))\r\n        .then(data => {\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (data[i].type == \"categorical\") {\r\n              if (data[i].label === item) {\r\n                //this.myVarString = data[i].label;\r\n                axios.delete(backendHost + \"/label/\" + data[i]._id);\r\n                //this.myVarId = data[i]._id;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      // .then(\r\n      //   setTimeout(function() {\r\n      //     axios.delete(\"http://localhost:8081/label\" + this.myVarId);\r\n      //     alert(\"succes\");\r\n      //   }, 500)\r\n      // );\r\n      this.counter++;\r\n    },\r\n    insertLabel() {\r\n      axios.post(backendHost + \"/label\", {\r\n        label: this.chips[this.chips.length - 1],\r\n        type: \"categorical\"\r\n      });\r\n    },\r\n    removeLabel() {},\r\n    addLabel() {},\r\n    submitData() {\r\n      if (this.index === this.actualContent.length - 1) {\r\n        alert(\"Reached end of file\");\r\n        return;\r\n      } else {\r\n        if (this.radios === \"Multi-class\") {\r\n          axios.post(backendHost + \"/labeledcontent\", {\r\n            label: this.selectedRadioCategory,\r\n            type: \"categorical\",\r\n            file_id: this.file,\r\n            content_id: md5(this.actualContent[this.index])\r\n          });\r\n          // alert(this.actualContent[this.index]);\r\n        } else {\r\n          axios.post(backendHost + \"/labeledcontent\", {\r\n            label: this.checkboxItems,\r\n            type: \"categorical\",\r\n            file_id: this.file,\r\n            content_id: md5(this.actualContent[this.index])\r\n          });\r\n          // alert(this.checkboxItems);\r\n        }\r\n      }\r\n      this.index += 1;\r\n    },\r\n    parser(data, delimiter) {\r\n      // var output = [];\r\n      // var temp = \"\";\r\n      // temp = data.replace(/(\\r\\n)+/g, \"\\r\\n\").split(\"\\r\\n\");\r\n      // temp = temp.join(\"\");\r\n      // output = temp.split(delimiter);\r\n\r\n      // return output;\r\n      this.actualContent = data.split(delimiter);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#main {\r\n  height: 100vh;\r\n}\r\n#radioGroup {\r\n  padding: 0 20px;\r\n}\r\n.checkboxes {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.checkboxes > * {\r\n  margin-right: 15px !important;\r\n  flex-grow: 0 !important;\r\n}\r\n\r\n#btn {\r\n  margin: 20px auto;\r\n  display: block;\r\n}\r\n</style>\r\n\r\n"]}]}